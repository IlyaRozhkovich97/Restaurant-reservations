services:
  web:
    build: .
    tty: true
    ports:
      - "8000:8000"
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    depends_on:
      bd:
        condition: service_healthy
    volumes:
      - .:/app
      - media_volume:/app/media
      - static_volume:/app/static
    env_file:
      - .env

  bd:
    image: postgres
    container_name: bd_graduation_work
    env_file:
      - .env
    volumes:
      - pgdbdata:/var/lib/postgresql/data/
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  redis:
    image: redis:latest
    restart: on-failure
    ports:
      - "6379:6379"

  celery-worker:
    build: .
    restart: on-failure
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    command: celery -A config worker -l INFO
    volumes:
      - .:/usr/src/app/
      - media_volume:/usr/src/app/media
      - static_volume:/usr/src/app/static
    depends_on:
      - redis
      - web
      - bd

  celery-beat:
    build: .
    volumes:
      - .:/usr/src/app/
      - media_volume:/usr/src/app/media
      - static_volume:/usr/src/app/static
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    restart: on-failure
    depends_on:
      - redis
      - web
    command: celery -A config beat -l INFO

volumes:
  pgdbdata:
  media_volume:
  static_volume: